console.log("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...");

const { Telegraf } = require('telegraf');
const axios = require('axios');
require('dotenv').config();

// ‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
const token = process.env.TELEGRAM_BOT_TOKEN || "7413880812:AAHIMLVG9rZetPK3MtYSwnGCxO9FQd-wM6w"; // <-- –í–°–¢–ê–í–¨ –°–í–û–ô –¢–û–ö–ï–ù –ó–î–ï–°–¨!
if (!token) {
  console.error('‚ùå –û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  process.exit(1);
}

const bot = new Telegraf(token);

// ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π API URL (Render)
const apiUrl = process.env.API_URL || "https://telegram-gallery.onrender.com/api/photographers";

// üìå –ö–æ–º–∞–Ω–¥–∞ /start ‚Äì —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–æ–≤
bot.start(async (ctx) => {
  let message = 'üì∏ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\nüìã –°–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–æ–≤:\n';
  try {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–æ–≤
    const response = await axios.get(apiUrl);
    const photographers = response.data;

    if (photographers.length === 0) {
      message += '‚ö†Ô∏è –§–æ—Ç–æ–≥—Ä–∞—Ñ—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.';
    } else {
      photographers.forEach((photographer) => {
        message += `üì∑ ${photographer.name} (‚≠ê ${photographer.rating})\n`;
      });
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–æ–≤:', error);
    message = '‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–∏—Å–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–æ–≤.';
  }
  ctx.reply(message);
});

// üìå –ö–æ–º–∞–Ω–¥–∞ /order ‚Äì –∑–∞–∫–∞–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∞
bot.command('order', (ctx) => {
  const parts = ctx.message.text.split(' ');
  if (parts.length < 2) {
    ctx.reply('‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /order <ID>');
  } else {
    const photographerId = parts[1];
    ctx.reply(`‚úÖ –í—ã –∑–∞–∫–∞–∑–∞–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∞ —Å ID: ${photographerId}`);
  }
});

// üìå –ö–æ–º–∞–Ω–¥–∞ /miniapp ‚Äì –æ—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
bot.command('miniapp', (ctx) => {
  const miniAppUrl = process.env.WEBAPP_URL || "https://telegram-gallery.onrender.com";
  ctx.reply('üåê –û—Ç–∫—Ä–æ–π—Ç–µ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:', {
    reply_markup: {
      inline_keyboard: [[{ text: "üîó –û—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–∞–ø–ø", web_app: { url: miniAppUrl } }]]
    }
  });
});

// ‚úÖ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch({
  allowedUpdates: ['message', 'edited_message', 'callback_query']
})
  .then(() => console.log("‚úÖ Telegram Bot –∑–∞–ø—É—â–µ–Ω –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫!"))
  .catch((err) => console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:", err));
