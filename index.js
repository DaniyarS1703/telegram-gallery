const express = require('express');
const { Telegraf } = require('telegraf');
const pool = require('./db');
require('dotenv').config();
const path = require('path');

const app = express();
app.use(express.json());
app.use(express.static(path.join(__dirname, 'web')));

const bot = new Telegraf(process.env.BOT_TOKEN);

// üì∏ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–æ–≤
app.get('/photographers', async (req, res) => {
    try {
        const result = await pool.query('SELECT * FROM photographers');
        res.json(result.rows);
    } catch (err) {
        console.error(err);
        res.status(500).send('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–æ–≤');
    }
});

// üìå –ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–∏–Ω–∏–∞–ø–ø
bot.start((ctx) => {
    ctx.reply('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ "–ì–∞–ª–µ—Ä–µ—é"! –û—Ç–∫—Ä—ã–≤–∞–π –º–∏–Ω–∏–∞–ø–ø:', {
        reply_markup: {
            inline_keyboard: [[
                { text: 'üì∏ –û—Ç–∫—Ä—ã—Ç—å –ì–∞–ª–µ—Ä–µ—é', web_app: { url: 'http://localhost:3000' } }
            ]]
        }
    });
});

// üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π
pool.query('SELECT NOW()', (err, res) => {
    if (err) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', err);
    } else {
        console.log('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞:', res.rows);
    }
});

// üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(3000, () => console.log('–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000'));

// üî• –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
const PORT = process.env.PORT || 3000;

app.use(express.json());

// –ü–æ–¥–∫–ª—é—á–∞–µ–º Webhook –≤–º–µ—Å—Ç–æ getUpdates
app.post(`/bot${process.env.BOT_TOKEN}`, (req, res) => {
    bot.handleUpdate(req.body);
    res.sendStatus(200);
});

bot.telegram.setWebhook(`https://telegram-gallery.onrender.com/bot${process.env.BOT_TOKEN}`);

app.listen(PORT, () => console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`));

