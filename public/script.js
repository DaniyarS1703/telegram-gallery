document.addEventListener("DOMContentLoaded", async () => {
    const photographersList = document.getElementById("photographers");

    if (!photographersList) {
        console.error("–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä #photographers –≤ index.html");
        return;
    }

    photographersList.innerHTML = "<p>–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–æ–≤...</p>";

    try {
        const response = await fetch("https://telegram-gallery.onrender.com/api/photographers");
        if (!response.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
        }

        const photographers = await response.json();

        if (photographers.length === 0) {
            photographersList.innerHTML = "<p>–§–æ—Ç–æ–≥—Ä–∞—Ñ–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.</p>";
        } else {
            photographersList.innerHTML = "";
            photographers.forEach((photographer) => {
                const photographerElement = document.createElement("div");
                photographerElement.classList.add("photographer");

                // –°–æ–∑–¥–∞–µ–º HTML –∫–∞—Ä—Ç–æ—á–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∞
                photographerElement.innerHTML = `
                    <div class="photographer-card">
                        <img src="${photographer.avatar}" alt="${photographer.name}" class="avatar">
                        <h2>${photographer.name}</h2>
                        <p>${photographer.bio || "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}</p>
                        <p>‚≠ê ${photographer.rating}</p>
                        <div class="carousel-container">
                            <button class="prev-btn">&lt;</button>
                            <div class="carousel" id="carousel-${photographer.id}">
                                ${photographer.portfolio.map(img => `<img src="${img}" alt="Portfolio">`).join('')}
                            </div>
                            <button class="next-btn">&gt;</button>
                        </div>
                    </div>
                `;

                photographersList.appendChild(photographerElement);

                // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–∞—Ä—É—Å–µ–ª—å
                const carousel = document.getElementById(`carousel-${photographer.id}`);
                const prevBtn = photographerElement.querySelector(".prev-btn");
                const nextBtn = photographerElement.querySelector(".next-btn");

                let isDragging = false;
                let startX, scrollLeft, velocity = 0, momentumID;

                // –û—Ç–∫–ª—é—á–∞–µ–º pointer-events –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, —á—Ç–æ–±—ã —Ç—è–Ω—É—Ç—å –ø—Ä–æ—â–µ
                carousel.querySelectorAll("img").forEach(img => {
                    img.style.pointerEvents = "none";
                });

                // –ù–∞—á–∞–ª–æ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
                carousel.addEventListener("mousedown", (e) => {
                    isDragging = true;
                    startX = e.pageX - carousel.offsetLeft;
                    scrollLeft = carousel.scrollLeft;
                    velocity = 0;
                    cancelMomentumTracking();
                    e.preventDefault();
                }, { passive: false });

                // –î–≤–∏–∂–µ–Ω–∏–µ –º—ã—à–∏
                carousel.addEventListener("mousemove", (e) => {
                    if (!isDragging) return;
                    const x = e.pageX - carousel.offsetLeft;
                    const walk = (x - startX) * 1.5; // üî• –°–Ω–∏–∂–µ–Ω –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç (1.5 –≤–º–µ—Å—Ç–æ 2)
                    carousel.scrollLeft = scrollLeft - walk;
                    velocity = walk * 0.1; // üî• –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –¥–≤–∏–∂–µ–Ω–∏—è
                });

                // –û–∫–æ–Ω—á–∞–Ω–∏–µ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è (–≤–∫–ª—é—á–∞–µ–º –∏–Ω–µ—Ä—Ü–∏—é)
                carousel.addEventListener("mouseup", () => {
                    isDragging = false;
                    startMomentumTracking();
                });

                carousel.addEventListener("mouseleave", () => {
                    isDragging = false;
                    startMomentumTracking();
                });

                // –§—É–Ω–∫—Ü–∏—è –∏–Ω–µ—Ä—Ü–∏–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
                function startMomentumTracking() {
                    cancelMomentumTracking();
                    momentumID = requestAnimationFrame(momentumLoop);
                }

                function cancelMomentumTracking() {
                    cancelAnimationFrame(momentumID);
                }

                function momentumLoop() {
                    carousel.scrollLeft += velocity;
                    velocity *= 0.95; // üî• –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ –∏–Ω–µ—Ä—Ü–∏–∏
                    if (Math.abs(velocity) > 0.5) {
                        momentumID = requestAnimationFrame(momentumLoop);
                    }
                }

                // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫–Ω–æ–ø–∫–∞–º–∏
                prevBtn.addEventListener("click", () => {
                    carousel.scrollBy({ left: -120, behavior: "smooth" });
                });

                nextBtn.addEventListener("click", () => {
                    carousel.scrollBy({ left: 120, behavior: "smooth" });
                });
            });
        }
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–æ–≤:", error);
        photographersList.innerHTML = "<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö.</p>";
    }
});
